#!/bin/bash
# Add this to your $PATH. This can be used by invoking the `journal`
# command or with an interval-based approach using cron (or both).
# To setup a cron job for a 30 minute interval:
#
#   0-30 * * * * journal
# 
# Original idea from http://www.stochasticgeometry.ie/2012/11/23/vimwiki/

# Check for journal path as an argument, otherwise fallback to the
# predefined $JOURNAL env or the default
if [ ! -z "$1" ]; then
    JOURNAL="$1"
elif [ ! -n "$JOURNAL" ]; then
    JOURNAL="$HOME/Journal"
fi

# Define today's directory where the log and related files are stored
TODAYS_DIR="$JOURNAL/$(date '+%Y')/$(date '+%m')/$(date '+%d')"

# Define the log file for today
LOGFILE="$TODAYS_DIR/log.md"

# Ensure the directory for this day is created
mkdir -p $TODAYS_DIR

# Add an timestamp entry to the file, but first check if the file ends with
# a newline file for proper spacing
# Reference: http://www.commandlinefu.com/commands/view/6440/function-to-check-whether-a-regular-file-ends-with-a-newline
if [[ -f "$LOGFILE" && -s "$LOGFILE" && ! -z $(tail -1 "$LOGFILE") ]]; then
    echo '' >> "$LOGFILE"
fi

echo -e "// $(date '+%H:%M')\n\n" >> "$LOGFILE"

if [ ! -z `which mvim` ]; then
    EDITOR=mvim
elif [ ! -z `which gvim` ]; then
    EDITOR=gvim
else
    EDITOR=vim
fi

$EDITOR + -c "startinsert" "$LOGFILE"
